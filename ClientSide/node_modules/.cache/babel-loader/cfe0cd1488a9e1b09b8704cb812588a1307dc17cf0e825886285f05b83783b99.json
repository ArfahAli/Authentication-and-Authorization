{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CUI Atd\\\\Desktop\\\\E-COMMERCE MERN STACK\\\\ClientSide\\\\src\\\\pages\\\\Context\\\\cartContext.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useState, createContext, useNavigate } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n  const handleRemove = id => {\n    const newCart = cart.filter(item => item.id !== id);\n    setCart(newCart);\n  };\n  const handleProductClick = product => {\n    navigate(`/product/${product.id}`, {\n      state: {\n        product\n      }\n    });\n  };\n  const removeItem = item => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.filter(i => i.id !== item.id);\n      return updatedCart;\n    });\n  };\n  const addToCart = data => {\n    const existingProduct = cart.find(item => item.id === data.id);\n    if (existingProduct) {\n      // Product already exists in the cart, update the quantity\n      const updatedCart = cart.map(item => item.id === data.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item);\n      setCart(updatedCart);\n    } else {\n      // Product doesn't exist in the cart, add it with quantity 1\n      setCart([...cart, {\n        ...data,\n        quantity: 1\n      }]);\n    }\n  };\n  const value = {\n    cart,\n    setCart,\n    handleRemove,\n    addToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"Q0/yM03Li7PsNegut4rhTH9pwrI=\", false, function () {\n  return [useNavigate];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","createContext","useNavigate","jsxDEV","_jsxDEV","CartContext","CartProvider","_ref","_s","children","navigate","cart","setCart","products","setProducts","handleRemove","id","newCart","filter","item","handleProductClick","product","state","removeItem","prevCart","updatedCart","i","addToCart","data","existingProduct","find","map","quantity","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CUI Atd/Desktop/E-COMMERCE MERN STACK/ClientSide/src/pages/Context/cartContext.js"],"sourcesContent":["import React, { useEffect, useReducer, useState, createContext, useNavigate} from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const [cart, setCart] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const handleRemove = (id) => {\r\n        const newCart = cart.filter((item) => item.id !== id);\r\n        setCart(newCart);\r\n      };\r\n\r\n      const handleProductClick = (product) => {\r\n        navigate(`/product/${product.id}`, { state: { product } });\r\n      };\r\n\r\n  const removeItem = (item) => {\r\n    setCart((prevCart) => {\r\n      const updatedCart = prevCart.filter((i) => i.id !== item.id);\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const addToCart = (data) => {\r\n    const existingProduct = cart.find((item) => item.id === data.id);\r\n    if (existingProduct) {\r\n      // Product already exists in the cart, update the quantity\r\n      const updatedCart = cart.map((item) =>\r\n        item.id === data.id ? { ...item, quantity: item.quantity + 1 } : item\r\n      );\r\n      setCart(updatedCart);\r\n    } else {\r\n      // Product doesn't exist in the cart, add it with quantity 1\r\n      setCart([...cart, { ...data, quantity: 1 }]);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  const value = { cart, setCart, handleRemove, addToCart };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,WAAW,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAE1C,OAAO,MAAMK,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAErC,MAAMG,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,YAAY,GAAIC,EAAE,IAAK;IACzB,MAAMC,OAAO,GAAGN,IAAI,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IACrDJ,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;EAED,MAAMG,kBAAkB,GAAIC,OAAO,IAAK;IACtCX,QAAQ,CAAE,YAAWW,OAAO,CAACL,EAAG,EAAC,EAAE;MAAEM,KAAK,EAAE;QAAED;MAAQ;IAAE,CAAC,CAAC;EAC5D,CAAC;EAEL,MAAME,UAAU,GAAIJ,IAAI,IAAK;IAC3BP,OAAO,CAAEY,QAAQ,IAAK;MACpB,MAAMC,WAAW,GAAGD,QAAQ,CAACN,MAAM,CAAEQ,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKG,IAAI,CAACH,EAAE,CAAC;MAC5D,OAAOS,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,eAAe,GAAGlB,IAAI,CAACmB,IAAI,CAAEX,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKY,IAAI,CAACZ,EAAE,CAAC;IAChE,IAAIa,eAAe,EAAE;MACnB;MACA,MAAMJ,WAAW,GAAGd,IAAI,CAACoB,GAAG,CAAEZ,IAAI,IAChCA,IAAI,CAACH,EAAE,KAAKY,IAAI,CAACZ,EAAE,GAAG;QAAE,GAAGG,IAAI;QAAEa,QAAQ,EAAEb,IAAI,CAACa,QAAQ,GAAG;MAAE,CAAC,GAAGb,IAAI,CACtE;MACDP,OAAO,CAACa,WAAW,CAAC;IACtB,CAAC,MAAM;MACL;MACAb,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGiB,IAAI;QAAEI,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IAC9C;EACF,CAAC;EAID,MAAMC,KAAK,GAAG;IAAEtB,IAAI;IAAEC,OAAO;IAAEG,YAAY;IAAEY;EAAU,CAAC;EAExD,oBAAOvB,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAAEA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAwB;AAC9E,CAAC;AAAC9B,EAAA,CAxCWF,YAAY;EAAA,QAEJJ,WAAW;AAAA;AAAAqC,EAAA,GAFnBjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}