{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CUI Atd\\\\Desktop\\\\E-COMMERCE MERN STACK\\\\ClientSide\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React from \"react\"\n// import \"./Login.css\";\n// import { Link } from 'react-router-dom';\n\n// const LoginSide = () => {\n//   return (\n//     <div classusername=\"login\">\n//         <h1>Login</h1>\n//         <form>\n//             <input type={'text'} placeholder={'Userusername'}/>\n//             <input type={'password'} placeholder={'Password'}/>\n//             <Link to='/'>  <button classusername=\"button\">Login</button></Link>\n\n//         </form>\n\n//     </div>\n//   )\n// }\n\n// export default LoginSide;\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  async function loginUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:8000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (data.user) {\n      localStorage.setItem('token', data.user);\n      alert('Login successful');\n      window.location.href = '/';\n    } else {\n      alert('Incorrect Email and password');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyLogin\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LS_Container\",\n        ref: LoginSignupContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(LoginSide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loginUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","user","localStorage","setItem","alert","window","location","href","children","className","Navigation","fileName","_jsxFileName","lineNumber","columnNumber","ref","LoginSignupContainerRef","LoginSide","Signup","onSubmit","value","onChange","e","target","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/CUI Atd/Desktop/E-COMMERCE MERN STACK/ClientSide/src/Components/Login.js"],"sourcesContent":["// import React from \"react\"\r\n// import \"./Login.css\";\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const LoginSide = () => {\r\n//   return (\r\n//     <div classusername=\"login\">\r\n//         <h1>Login</h1>\r\n//         <form>\r\n//             <input type={'text'} placeholder={'Userusername'}/>\r\n//             <input type={'password'} placeholder={'Password'}/>\r\n//             <Link to='/'>  <button classusername=\"button\">Login</button></Link>\r\n\r\n          \r\n\r\n//         </form>\r\n    \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default LoginSide;\r\n\r\nimport { useState } from 'react'\r\n\r\nfunction Login() {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tasync function loginUser(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst response = await fetch('http://localhost:8000/api/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await response.json()\r\n\r\n\t\tif (data.user) {\r\n\t\t\tlocalStorage.setItem('token', data.user)\r\n\t\t\talert('Login successful')\r\n\t\t\twindow.location.href = '/'\r\n\t\t} else {\r\n\t\t\talert('Incorrect Email and password')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n        <div className=\"bodyLogin\">\r\n      <Navigation />\r\n      <div className=\"LS_Container\" ref={LoginSignupContainerRef}>\r\n        <LoginSide />\r\n        <div className=\"side-div\">\r\n          <button className=\"button\" >\r\n          </button>\r\n        </div>\r\n        <Signup />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<form onSubmit={loginUser}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type=\"submit\" value=\"Login\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}