{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CUI Atd\\\\Desktop\\\\E-COMMERCE MERN STACK\\\\ClientSide\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const history = useHistory();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n  async function populateQuote() {\n    const req = await fetch('http://localhost:8000/api/quote', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:8000/api/quote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n_s(Dashboard, \"LplMk0xp4gApsYE42pcgGIRN3Iw=\", false, function () {\n  return [useHistory];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt","useHistory","jsxDEV","_jsxDEV","Dashboard","_s","history","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","replace","updateQuote","event","preventDefault","method","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/CUI Atd/Desktop/E-COMMERCE MERN STACK/ClientSide/src/Components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n\tconst history = useHistory()\r\n\tconst [quote, setQuote] = useState('')\r\n\tconst [tempQuote, setTempQuote] = useState('')\r\n\r\n\tasync function populateQuote() {\r\n\t\tconst req = await fetch('http://localhost:8000/api/quote', {\r\n\t\t\theaders: {\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(data.quote)\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('token')\r\n\t\tif (token) {\r\n\t\t\tconst user = jwt.decode(token)\r\n\t\t\tif (!user) {\r\n\t\t\t\tlocalStorage.removeItem('token')\r\n\t\t\t\thistory.replace('/login')\r\n\t\t\t} else {\r\n\t\t\t\tpopulateQuote()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\tasync function updateQuote(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst req = await fetch('http://localhost:8000/api/quote', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tquote: tempQuote,\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(tempQuote)\r\n\t\t\tsetTempQuote('')\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Your quote: {quote || 'No quote found'}</h1>\r\n\t\t\t<form onSubmit={updateQuote}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Quote\"\r\n\t\t\t\t\tvalue={tempQuote}\r\n\t\t\t\t\tonChange={(e) => setTempQuote(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"submit\" value=\"Update quote\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}